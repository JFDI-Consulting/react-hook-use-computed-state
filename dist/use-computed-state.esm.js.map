{"version":3,"file":"use-computed-state.esm.js","sources":["../src/useWhatChanged.js","../src/useComputedState.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nconst useWhatChanged = (deps = []) => {\n    const prev = useRef(deps);\n\n    useEffect(() => {\n        const changed = deps.map((x, i) => ({ bef: prev.current[i], now: x })).filter(({ bef, now }) => now !== bef);\n        if (changed.length) console.log(\"What Changed?\", changed);\n        prev.current = deps;\n    }, deps);\n};\n\nexport default useWhatChanged;\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport useWhatChanged from \"./useWhatChanged\";\nimport { attempt } from \"@jfdi/attempt\";\n\nconst isFunc = x => typeof x === \"function\";\n\nexport const useComputedState = ({\n    initialState = Date.now(),\n    initialComputedState,\n    computeFn,\n    beforeChange,\n    afterChange\n}) => {\n    const [state, setState] = useState(initialState);\n    const computedState = useRef(initialComputedState);\n\n    useEffect(() => {\n        if (isFunc(computeFn)) {\n            const [e, res] = attempt(() => computeFn(state, computedState.current));\n\n            if (!e) computedState.current = res;\n        }\n    }, [state, computeFn]);\n\n    const callBeforeChange = useCallback(\n        (prevState, prevComputedState) => isFunc(beforeChange) && beforeChange(prevState, prevComputedState),\n        [beforeChange]\n    );\n\n    const callAfterChange = useCallback(\n        (newState, newComputedState) => isFunc(afterChange) && afterChange(newState, newComputedState),\n        [afterChange]\n    );\n\n    const notifyChange = useCallback(() => {\n        const newState = Date.now();\n        setState(newState);\n        isFunc(afterChange) && afterChange(newState, computedState.current);\n    }, [afterChange]);\n\n    const setComputedState = useCallback(\n        newComputedState => {\n            const prevComputedState = computedState.current;\n            computedState.current = newComputedState;\n            const newState = Date.now();\n            setState(prevState => {\n                callBeforeChange(prevState, prevComputedState);\n                return newState;\n            });\n            callAfterChange(newState, computedState.current);\n        },\n        [callBeforeChange, callAfterChange]\n    );\n\n    useWhatChanged([state, beforeChange, afterChange]);\n\n    return {\n        state,\n        computedState: computedState.current,\n        setState,\n        setComputedState,\n        notifyChange\n    };\n};\n"],"names":["useWhatChanged","deps","prev","useRef","useEffect","changed","map","x","i","bef","current","now","filter","length","console","log","isFunc","useComputedState","initialState","Date","initialComputedState","computeFn","beforeChange","afterChange","state","setState","useState","computedState","e","res","attempt","callBeforeChange","useCallback","prevState","prevComputedState","callAfterChange","newState","newComputedState","notifyChange","setComputedState"],"mappings":"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"}